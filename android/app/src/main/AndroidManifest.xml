<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="com.android.launcher.permission.INSTALL_SHORTCUT" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.ACTION_MANAGE_ALL_FILES_ACCESS_PERMISSION " />
    <!-- On Android the Permission.storage permission is linked to the Android READ_EXTERNAL_STORAGE 
        and WRITE_EXTERNAL_STORAGE permissions. Starting from Android SDK 29 (Android 10) the 
        READ_EXTERNAL_STORAGE and WRITE_EXTERNAL_STORAGE permissions have been marked deprecated 
        and have been fully removed/ disabled since Android SDK 33 (Android 13).
        If your application needs access to media files Google recommends using the READ_MEDIA_IMAGES,
        READ_MEDIA_VIDEOS or READ_MEDIA_AUDIO permissions instead. These can be requested using the 
        Permission.photos, Permission.videos and Permission.audio respectively. To request these 
        permissions make sure the compileSdkVersion in the android/app/build.gradle file is set to 33.
        MANAGE_EXTERNAL_STORAGE permission (using Permission.manageExternalStorage). 
        If your application needs access to Androids file system it is possible to request the 
        considered a high-risk or sensitive permission. There for it is required 
        As of Android SDK 30 (Android 11) the MANAGE_EXTERNAL_STORAGE permission is 
        the application via the Google Play Store. 
        to declare the use of these permissions if you intend to release -->
    <uses-permission android:name="android.permission.MANAGE_EXTERNAL_STORAGE"
    />

    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />

    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"
        android:maxSdkVersion="29" tools:ignore="ScopedStorage" />


    <uses-permission android:name="android.permission.ACTION_MANAGE_ALL_FILES_ACCESS_PERMISSION" />
    <uses-permission android:name="android.permission.ACTION_CREATE_DOCUMENT" />
    <uses-permission android:name="android.permission.ACTION_OPEN_DOCUMENT" />
    <uses-permission android:name="android.permission.ACTION_OPEN_DOCUMENT_TREE" />
    <uses-permission android:name="android.permission.ACTION_CREATE_DOCUMENT" />


    <!-- need to device_information: ^0.0.4 -->
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />


    <queries>
        <intent>
            <action android:name="android.intent.action.TTS_SERVICE" />
        </intent>
    </queries>
    <application
        android:label="flashcards_reader"
        android:name="${applicationName}"
        android:requestLegacyExternalStorage="true"
        android:icon="@mipmap/ic_launcher">

        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize">
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data
                android:name="io.flutter.embedding.android.NormalTheme"
                android:resource="@style/NormalTheme"
            />
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />


            </intent-filter>

        </activity>
        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
    </application>
</manifest>